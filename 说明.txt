完成066条码规则
1. 066是最复杂的规则，这个验证没问题的话，后面的就容易了。
2. 程序会判断模板文件夹的名称，如果包含066字样，就会使用此品类专用的规则（具体规则根据文档描述写死在了代码里）。
以后的其他品类的规则判定也会是相同逻辑，所以必须保证模板文件夹包含唯一区别的字符串（当前使用文档编号）。
3. 序列号多少位也是写死在了代码里（不同品类不一样），不需要再在界面上设置。起始号、自增都应该工作了。
测试要点：
1. 先试一下066的与非066的标签，日期转换结果应该不一样
2. 测试066的不同日期的转换结果是否与文档一致（我的代码里加了一些自动测试，因此不需要每个值都测，随机选就可以了）
=========================
只显示一个标签图片，品类与标签分两个列表显示
=========================
调整界面，让标签缩略图保持固定大小
之前的可缩放式没做好，图多了就看不清
=========================
增加串口监测选项
如果勾选，且收到01，则触发打印。
如果不勾，禁用班次、日期、序列号的编辑
=========================
增加打印历史纪录
由于程序不知道btw文件里的条码（而且一个标签可能有多个条码），因此历史纪录目前只保留一下信息:
1. btw文件名
2. 参数中班次、日期、序列号拼接起来的字符串
3. 打印日期
历史纪录保存在文件%appdata%\arTriggerPrint\PrintHistory.db中，属于sqlite文件。可以删除，
程序启动时检测到如果不存在就会重新创建。
=========================
尝试解决收到串口就奔溃的问题
用十六进制方式打印收到的数据，以便后续对照
=========================
解决串口忘记打开的问题
=========================
增加收到串口则打印，不管收到数据是什么内容，方便调试
增加更全的log
=========================
增加读串口测试
程序写死了串口名字为COM3，收到数据时候会在最底部显示内容。
=========================
添加关于查找模板的log，会说明从哪里寻找模板，找到了多少个。
=========================
修改架构，使用btw文件模板。不再使用prn导出文件。
系统要求：必须已安装bartender开发版。
可测试功能：套用模板，设置班次、日期、序列号打印。
1. 模板路径： %appdata%\arTriggerPrint\打印模板，运行程序后只读取一层文件夹，点击文件夹显示内部btw文件缩略图。
2. 点击btw缩略图，自动检测内部可变字段，并根据字段是否存在启用或禁用界面上班次、日期、序列号3个控件。
3. 程序允许btw文件内字段使用不同的别名，比如说用时间代替日期，这主要是为了btw文件内字段与客户文档一致的话对应比较方便。
   具体别名规则在文件%appdata%\arTriggerPrint\打印模板\字段别名.xml中，内容如下：
   <?xml version="1.0" encoding="utf-8"?>
<字段别名>
  <班次>
    <班组 />
    <哪一班 />
  </班次>
  <日期>
    <时间 />
    <年月 />
  </日期>
  <序列号>
    <起始号码 />
    <流水号 />
  </序列号>
</字段别名>
其中第1层只有3个固定的项目：班次、日期、序列号，不能修改。再下一级的，是别名，可以任意增加，允许空格但程序读入会忽略。
4. 点击打印，程序会自动把字段信息设置进标签中，并打印到默认打印机。
5. 在打印的同时会生成预览文件，固定路径为%appdata%\arTriggerPrint\当前打印预览1.bmp，这主要是为以后可能的打印预览功能做准备，
   现在尚未解决预览的图片放哪里、性能问题等。
6. 由于时间限制，还没完全实现班次、日期、序列号的值的准确性。
   班次选择后条码的值应为1，2，3的一个。
   日期当前为选择后日期的固定格式，类似190516
   流水号现在输入还不生效，程序固定为从0开始，打一次自增一个，补足4位。
7. 启动时比较慢的问题：是由于程序在加载bartender，有可能后面可以优化一下。

=========================
解决条码字段标签种类选择后，另外两个字段自动更新显示问题
=========================
增加可配置下拉列表
程序读取%appdata%\arTriggerPrint\众泰滑柱字段关联.xlsx文件，把第一列作为标签种类的下拉选项，
选择了以后，程序自动得到后面两列的内容（当前界面上没有更新出来，有问题，正在看，但不影响打印）
测试重点：
此种excel文件会不会很多？文件和文件夹层次有没有必要作一些规定？
=========================
尝试增加一个正式品类条码规则
品类名称：众泰6K00079-1
输入字段后，点击预览，生成条码，再次点击，流水号自增，点击打印，则打印当前显示的预览条码
测试重点：如果使用当前的设计，一共可能有多少种品类，输入的难度，是否需要添加一些下拉列表或条码规则？
=========================
增加zpl打印模板支持
1. 在%appdata%\arTriggerPrint\ZplTemplates\下面放模板文件，文件名需和品类名一样，且扩展名为prn，比如产品1.prn。
2. 在点击打印测试的时候，如果找到对应品类的模板文件，则把模板内的BarcodeToBeReplaced替换为实际条码字符串，并打印标签。 
   如果没找到，则还是按原有规则生成最简单的128码的一个条码。
=========================
修改日期转为条码的字符串格式，避免出现中文
=========================
测试zpl打印
预览条码成功后，点击“测试打印”按钮，会把包含128码和文字的zpl命令发送到默认打印机。
注意：
很难找到一个好用免费的可以嵌入程序的标签设计器，因此目前打印复杂标签的思路是，把设计好的标签格式导出zpl模板，放在固定路径，文件名和品类相关联，
程序根据规则生成条码字符串以后，替换zpl模板里的原有条码字符串，然后发送到打印机。
另一种思路是像以前的配置xml可供用户输入基本打印元素的参数，组装zpl命令，但缺点是调试太费事费纸，程序实现也比上面方案复杂，唯一的优势是可以不依赖bartender等软件。
=========================
方案最初效果演示
1. 最顶上点击选择品类，当前演示为两种
2. 点击后下面显示可配置的参数，不同品类的参数可以不一样
3. 用户选择、填写参数后，点击预览按钮，可以看到条码效果，目前没加规则，只是把相关参数简单拼接在一起

注意：
1. 为了实现方便，目前打算把品类和参数写死在程序里，以后要改也不难，替换exe即可
2. 对需求的限制：参数之间不能有关联性，比如不能要求如果用户选择了某参数，则另一参数的可选范围发生变化。否则技术上难以实现，或工作量太大。
